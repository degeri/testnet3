{"version":"1","action":"add"}{"token":"bd72571db228c316ff1f1c948f57cce1bfdc8f7833436b2f330196fe0ff30658","parentid":"0","comment":"test\n\n\n\ntest\n\n\n\n\n\n\n\n\n\n\n\nteest","signature":"87eee5a3bca42c178f2f4731ae44a0909718c847323ef6e8fc193937947d910c970d8dd974e34b682d4bc5c5434b4b3a2c6b22f6bb803b16f1828132e957d00d","publickey":"ea680a28ad576d9b599972c4ea45018e913098111c36c75e2ae8951437de04a6","commentid":"1","receipt":"0e65e87d32c648835b967973192c7d6486f51e6f5bc64865b16fda1b9f9440ad855af88769c961d410c57922b2f837699ea4668b8daa49ee95038e28e80c3b0f","timestamp":1554392325,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"add"}{"token":"bd72571db228c316ff1f1c948f57cce1bfdc8f7833436b2f330196fe0ff30658","parentid":"0","comment":"a\n\n\n\n\nb\n\n\n\n\n\nC","signature":"149eafe8dfe36785eb875c1fc9d679db7cfc3080e72ee05ffc9d00c61efd3d1477b9a7fedf615eb28be5ad782c9528fad6807ea4d5849bebdb6c78e30d8ba000","publickey":"1b9addb35aae7f0a716f9a45492ffd81ce64950282ef49e5b5430f442fc8c970","commentid":"2","receipt":"ed1d41b6aafbee3503d1435048046d4160b451f8ea936d7dca019bbad52c63c66b15ef979d4071bfd2cad84d4386bc7b55048e0bf2d63dc1e0431febfc665304","timestamp":1554395469,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"add"}{"token":"bd72571db228c316ff1f1c948f57cce1bfdc8f7833436b2f330196fe0ff30658","parentid":"0","comment":"1. oi\n\n\n\n\n\n\n\n2. tchau","signature":"37d12a681099c04d016802b37eef242cf727d8787d1d4abe27c227a28611dab9c178d46c2f9a38c2c06187164a8cc108730223087715913d12ec67d29cc7a101","publickey":"1b9addb35aae7f0a716f9a45492ffd81ce64950282ef49e5b5430f442fc8c970","commentid":"3","receipt":"e3c6b3430cb88db21a1d45a86e04176276b862bbc890ced8ef3ee916e81fea3e53f2ffec86e237cf764ab9ac140018311c5253c4c855653a447e63f2f9554003","timestamp":1554395563,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"add"}{"token":"bd72571db228c316ff1f1c948f57cce1bfdc8f7833436b2f330196fe0ff30658","parentid":"0","comment":"1. It allows the stakeholders to override the ability to spend from the treasury in the case of compromise of the key.\n\n\n2. Yes, that is correct.  There would be a permanent vote bit assigned to voting on a treasury spend in the same way that there is a bit voting for the disapproval of the previous block.   There would be additional `OP_RETURN` data added that specifies the hash of the transaction that is being voted on in the same way that the block that is being voted on is included via that mechanism.  Then there would be separate consensus rules that enforce the spending limits.  That would theoretically allow the potential to spend more than once from the treasury in the future with a voted consensus change as well as allow immediately publishing an amended treasury spend since failure to get enough votes on the initial spend would effectively invalidate the old draft transaction.  These are the types of specific details that would be in the DCP.\n\n\n3.  Yes, the proposal should have specified a signature there.\n\nIn regards to your questions regarding p2sh in terms of key compromise, it would just move the problem into the p2sh instead of the output of the coinbase because the script itself has to be consensus enforced, as you noted, so there would have to be a vote to change the script too.\n\nSomething I think the proposal does not do a good job of explaining is that `OP_TGEN` and `OP_TSPEND` create what is effectively an account for the treasury instead of using the standard utxo model.  The draft key signature also would not have the power to unilaterally spend as `OP_TSPEND` would require both a signature from that key as well as the tally of the yes votes from stakeholders, which acts as an efficient proxy for all of their signatures, to succeed.  That approach also cleanly solves the issue where you would have a bunch of tiny inputs (one per block) in large treasury payouts resulting in massive transactions that would violate size limits.  The outputs of the spending transaction itself can spend to an valid script as usual.\n\n\n4. There isn't much to show since it would consist of exactly one opcode, named `OP_TGEN'.\n\nA current coinbase looks like:\n```\nout[0] = \\u003cOP_HASH160 \\u003ccurrent treasury script hash\\u003e OP_EQUAL\\u003e\nout[1] = \\u003cOP_RETURN 4e1305004fdcced262afa8dc\\u003e\nout[2] = \\u003cOP_DUP OP_HASH160 \\u003cminer pubkey hash\\u003e OP_EQUALVERIFY OP_CHECKSIG\\u003e\n```\n\nA new coinbase under this proposal would look like:\n```\nout[0] = \\u003cOP_TGEN\\u003e\nout[1] = \\u003cOP_RETURN 4e1305004fdcced262afa8dc\\u003e\nout[2] = \\u003cOP_DUP OP_HASH160 \\u003cminer pubkey hash\\u003e OP_EQUALVERIFY OP_CHECKSIG\\u003e\n```\n\nIt requires consensus enforcement of only being valid in the very specific case of the first output of a coinbase transaction and that script being required to be exactly `OP_TGEN`.\n\n5. That wouldn't work because a transaction is either valid or it's not.  There is no notion of partially-valid transactions.  The draft transaction is called that in the proposal because that is what it really would be.  It would remain off chain, but publicly available, and would fail validation until all spending conditions were met, namely the new semantics enforced by `OP_TSPEND`.  The result is that if anyone tried to broadcast it before it's valid, it would be rejected, and once it became valid, anyone could broadcast it independently of the Pi operators.  That is also why the votes must include the hash of the spending transaction they are voting on.","signature":"65e1edd73cec4841531da7c24afc5b29c63153fd6572e8f9e0cfed8b2bf22f47506103d7583bd49b48efec36bb49cdb191bb3db9f06dda0b4c7bf4b76335d90c","publickey":"1b9addb35aae7f0a716f9a45492ffd81ce64950282ef49e5b5430f442fc8c970","commentid":"4","receipt":"886608bc9e670cd1c2579ab7674e07d99ae769b79a6e6b2977d905b23c59261e6e6ad20fa284e7bda49e84abdaef96519f3184a871e4b21a8ae5f0f28ce64c0d","timestamp":1554396108,"totalvotes":0,"resultvotes":0,"censored":false}
{"version":"1","action":"add"}{"token":"bd72571db228c316ff1f1c948f57cce1bfdc8f7833436b2f330196fe0ff30658","parentid":"0","comment":"1. It allows the stakeholders to override the ability to spend from the treasury in the case of compromise of the key.\n\n2. Yes, that is correct. There would be a permanent vote bit assigned to voting on a treasury spend in the same way that there is a bit voting for the disapproval of the previous block. There would be additional OP_RETURN data added that specifies the hash of the transaction that is being voted on in the same way that the block that is being voted on is included via that mechanism. Then there would be separate consensus rules that enforce the spending limits. That would theoretically allow the potential to spend more than once from the treasury in the future with a voted consensus change as well as allow immediately publishing an amended treasury spend since failure to get enough votes on the initial spend would effectively invalidate the old draft transaction. These are the types of specific details that would be in the DCP.\n\n3. Yes, the proposal should have specified a signature there. \\n\\nIn regards to your questions regarding p2sh in terms of key compromise, it would just move the problem into the p2sh instead of the output of the coinbase because the script itself has to be consensus enforced, as you noted, so there would have to be a vote to change the script too.","signature":"90d5b73f718c8de39e8c1e644a6c4e6d816cc3826d209ee89ba6a0dab420548b08be7a45fb8e0837fa4c46b3f51787f695e48dd9468b6255a8e6d01e38a1510b","publickey":"1b9addb35aae7f0a716f9a45492ffd81ce64950282ef49e5b5430f442fc8c970","commentid":"5","receipt":"95fc8d66d577c8e346cd2fe4f1d43a20533d7a9abb511f4d7b4bdcd7fad0ec6b3204bf7555bcabcb5d325c3d488309c4c94c8b2526af4d25bc562c2bb373cc05","timestamp":1554396514,"totalvotes":0,"resultvotes":0,"censored":false}
